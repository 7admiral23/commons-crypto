# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Java Cross Test

on:
  # allow direct trigger
  workflow_dispatch:
  push:
    paths:
      - '**/native/**'
      - 'Makefile*'
      - '**/OpenSslNative.java'
      - '**/OpenSslCryptoRandomNative.java'
      - '**/OpenSslInfoNative.java'
      - '**/maven_crosstest.yml'
      - 'src/docker/*'
      - '!src/docker/Dockerfile*'
    # Don't trigger on docker change; will be started after build
  workflow_run:
    workflows: ['Docker images']
    types: [completed]


permissions:
  contents: read

env:
  REGISTRY: ghcr.io

jobs:
  test-cross:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          persist-credentials: false
      - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
      - name: Image prefix (lower case)
        run: |
          echo "IMAGE_PREFIX=$(echo ${{ env.REGISTRY }}/${{ github.repository }} | tr '[A-Z]' '[a-z]')" >>$GITHUB_ENV
      - name: Build 64 bit native code
        run: |
          time IMAGE_PREFIX=${IMAGE_PREFIX} docker compose -f src/docker/docker-compose-gh.yaml run --quiet-pull crypto-gh src/docker/build.sh
      - name: Build 32 bit native code
        run: |
          time IMAGE_PREFIX=${IMAGE_PREFIX} docker compose -f src/docker/docker-compose-gh.yaml run --quiet-pull crypto-gh src/docker/build_linux32.sh
          ls -l target
      - name: Run on aarch64
        run: |
          time IMAGE_PREFIX=${IMAGE_PREFIX} docker compose -f src/docker/docker-compose-gh.yaml run --quiet-pull crypto-aarch64-gh \
            src/docker/test_cross.sh
      - name: Run on riscv64
        # See https://github.com/java-native-access/jna/issues/1557
        run: |
          time IMAGE_PREFIX=${IMAGE_PREFIX} docker compose -f src/docker/docker-compose-gh.yaml run --quiet-pull crypto-riscv64-gh \
            src/docker/test_cross.sh -Djna.version=5.12.0
