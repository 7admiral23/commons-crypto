# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Java AdHoc

# Check for openssl and crypto installs

on:
  # allow direct trigger
  workflow_dispatch:
  # and self-trigger
  push:
    paths:
      - '**/workflows/adhoctest.yml'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macos-latest, windows-latest]
        os: [windows-latest]
        java: [ 8 ]
        # ref: [ 'rel/commons-crypto-1.1.0', master ]
        ref: [ master ]
      fail-fast: false

    steps:
    # - uses: actions/checkout@v3
    #   with:
    #     ref: ${{ matrix.ref }}
    # - name: Set up JDK ${{ matrix.java }}
    #   uses: actions/setup-java@v3
    #   with:
    #     distribution: 'temurin'
    #     java-version: ${{ matrix.java }}
    - name: OpenSSL version
      run: openssl version -a
    # - name: Build with Maven
    #   env:
    #     OPENSSL_HOME: "C:\\Miniconda\\Library"
    #   run: mvn -V test -D"rat.skip" -D"animal.sniffer.skip" --no-transfer-progress -DtrimStackTrace=false
    # - name: Run sample Crypto
    #   run: |
    #     mvn -q exec:java -D"exec.mainClass=org.apache.commons.crypto.Crypto"
    # - name: Run sample OpenSslJna
    #   if: always()
    #   run: |
    #     mvn -q exec:java -D"exec.mainClass=org.apache.commons.crypto.jna.OpenSslJna"
    - name: Find OpenSSL Mac
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        for i in $(which -a openssl) ; do  echo $i; $i version ; echo ""; done
    - name: Find OpenSSL Win
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        where /T openssl
        echo "==="
        where /T libcrypto.dll
        echo "==="
        dir "C:\Program Files\OpenSSL\bin\"
      shell: cmd
    - name: env sort
      if: always()
      run: |
        env | sort
